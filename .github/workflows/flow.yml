name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main repository
      uses: actions/checkout@v2

    - name: Checkout Spring Boot repository
      uses: actions/checkout@v2
      with:
        repository: your-org/spring-boot-repo
        path: spring-boot-repo

    - name: Checkout Angular repository
      uses: actions/checkout@v2
      with:
        repository: your-org/angular-repo
        path: angular-repo

    - name: Checkout Cypress repository
      uses: actions/checkout@v2
      with:
        repository: your-org/cypress-repo
        path: cypress-repo

  start-postgres:
    runs-on: ubuntu-latest
    steps:
    - name: Start PostgreSQL
      run: |
        echo "Starting PostgreSQL..."
        docker run --name postgres -e POSTGRES_DB=testdb -e POSTGRES_USER=user -e POSTGRES_PASSWORD=password -d -p 5432:5432 postgres:13
        echo "Waiting for PostgreSQL to be ready..."
        until docker exec postgres pg_isready -U user; do
          echo "Waiting for PostgreSQL..."
          sleep 5
        done

  build-spring-boot:
    runs-on: ubuntu-latest
    needs: [checkout, start-postgres]
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Spring Boot application
      run: ./mvnw clean install
      working-directory: ./spring-boot-repo

  start-spring-boot:
    runs-on: ubuntu-latest
    needs: build-spring-boot
    steps:
    - name: Start Spring Boot application
      run: ./mvnw spring-boot:run &
      working-directory: ./spring-boot-repo
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
        SPRING_DATASOURCE_USERNAME: user
        SPRING_DATASOURCE_PASSWORD: password

    - name: Wait for Spring Boot application to start
      run: |
        echo "Waiting for Spring Boot to start..."
        until curl --output /dev/null --silent --head --fail http://localhost:8080; do
          echo "Waiting for application to be up..."
          sleep 5
        done

  build-angular:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
    - name: Set up Node.js 18.x for building the Angular application
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Angular dependencies
      run: npm install
      working-directory: ./angular-repo

    - name: Build Angular application
      run: npm run build
      working-directory: ./angular-repo

  start-angular:
    runs-on: ubuntu-latest
    needs: [start-spring-boot, build-angular]
    steps:
    - name: Start Angular application
      run: npm start &
      working-directory: ./angular-repo

    - name: Wait for Angular application to start
      run: |
        echo "Waiting for Angular to start..."
        until curl --output /dev/null --silent --head --fail http://localhost:4200; do
          echo "Waiting for Angular application to be up..."
          sleep 5
        done

  run-cypress:
    runs-on: ubuntu-latest
    needs: start-angular
    steps:
    - name: Install Cypress dependencies
      run: npm install
      working-directory: ./cypress-repo

    - name: Run Cypress tests
      run: npm run cypress:run
      working-directory: ./cypress-repo
      env:
        CYPRESS_baseUrl: http://localhost:4200
